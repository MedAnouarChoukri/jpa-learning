<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<context:spring-configured />
	<context:annotation-config />

	<!-- Datasource / Database connection pool -->
	<bean id="dataSource"
          class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close"
          p:driverClassName="${jdbc.driverClassName}"
          p:url="${jdbc.url}"
          p:username="${jdbc.username}"
          p:password="${jdbc.password}"
	/>

	<!-- EntityManagerFactory -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:packagesToScan="fr.huartgi.jpa.core.domain"
        p:dataSource-ref="dataSource"
		p:persistenceUnitName="jpaLearningPu"
        p:jpaPropertyMap-ref="jpaPropertyMap"
		p:jpaVendorAdapter-ref="hibernateVendor" 
	/>
	<bean id="hibernateVendor" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
		p:showSql="${hibernate.show_sql}"
	/>
	<util:map id="jpaPropertyMap">
	    <entry key="generateDdl" value="${hibernate.generate_ddl}"/>
	    <entry key="hibernate.hbm2ddl.auto" value="${hibernate.hbm2ddl.auto}"/>
	    <entry key="hibernate.dialect" value="${hibernate.dialect}"/>
	   	<entry key="hibernate.show_sql" value="${hibernate.show_sql}"/>
	   	<entry key="hibernate.format_sql" value="${hibernate.format_sql}"/>
	   	<!-- JPA 2nd level cache -->
	   	<entry key="javax.persistence.sharedCache.mode" value="ENABLE_SELECTIVE" />
        <entry key="hibernate.cache.use_second_level_cache" value="${hibernate.cache.use_second_level_cache}" />
        <entry key="hibernate.cache.region.factory_class" value="org.hibernate.cache.jcache.JCacheRegionFactory" />
        <entry key="hibernate.javax.cache.provider" value="org.ehcache.jsr107.EhcacheCachingProvider" />
        <!-- 
        <entry key="hibernate.cache.region.factory_class" value="org.hibernate.cache.ehcache.EhCacheRegionFactory" />
         -->
	</util:map>


	<!-- EntityManager -->
	<bean id="entityManager" class="org.springframework.orm.jpa.support.SharedEntityManagerBean"
		p:entityManagerFactory-ref="entityManagerFactory" 
	/>
	
	<!-- Transactions management -->
    <tx:annotation-driven transaction-manager="transactionManager" /> 
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean> 
	
	<!-- Allows injection of Entity Managers through @PersistenceContext -->
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
 	
 
</beans>